function [ feistel_out ] = Feistel( R, key )
	%% expansion
	S = zeros(8, 6);
	for k = 1: 8
		S(k, 2: 5) = R(4*(k-1)+1: 4*k);
		if k == 1
			S(1, 1) = R(32);
		else
			S(k, 1) = R(4*(k-1));
		end
		S(k, 6) = R(mod(4*k+1, 32));
	end
	S = reshape(S', 48, 1);

	%% key mixing
	key_mixed = xor(S, key);
	key_mixed = reshape(key_mixed, 6, 8);
	key_mixed = key_mixed';

	%% Substitution
	% randomly generated
	S_box = {[2, 10, 13, 8, 9, 10, 8, 0, 12, 0, 8, 1, 0, 9, 5, 10;...
			  6, 8, 15, 5, 6, 10, 11, 12, 2, 13, 10, 2, 2, 4, 4, 2;...
			  13, 11, 11, 1, 14, 10, 8, 3, 13, 9, 0, 2, 10, 2, 11, 11;...
			  12, 10, 5, 9, 0, 15, 15, 7, 15, 15, 9, 9, 5, 3, 0, 1],...
			 [0, 2, 9, 12, 7, 3, 3, 11, 8, 8, 5, 9, 14, 14, 0, 1;...
			  6, 2, 1, 6, 6, 11, 1, 5, 14, 7, 0, 0, 1, 1, 10, 10;...
			  8, 15, 14, 1, 7, 3, 1, 11, 9, 12, 7, 14, 15, 3, 9, 5;...
			  6, 2, 14, 4, 12, 1, 1, 6, 2, 3, 3, 11, 8, 0, 8, 10],...
			 [10, 0, 13, 2, 5, 9, 6, 10, 3, 7, 1, 11, 11, 7, 11, 11;...
			  10, 8, 4, 4, 12, 7, 7, 11, 6, 14, 3, 1, 15, 0, 11, 9;...
			  4, 14, 9, 7, 7, 7, 5, 7, 11, 9, 2, 13, 4, 14, 12, 11;...
			  6, 10, 0, 8, 0, 10, 12, 0, 13, 13, 3, 14, 6, 3, 4, 3],...
			 [0, 3, 6, 7, 2, 12, 10, 5, 12, 11, 0, 15, 7, 1, 11, 11;...
			  15, 5, 5, 14, 11, 5, 12, 6, 5, 9, 10, 13, 12, 4, 8, 15;...
			  2, 7, 2, 8, 7, 10, 14, 4, 8, 3, 4, 12, 13, 7, 6, 13;...
			  1, 15, 2, 15, 2, 6, 15, 3, 1, 10, 8, 8, 1, 1, 0, 1],...
			 [5, 2, 6, 10, 5, 13, 3, 13, 1, 1, 11, 2, 2, 15, 12, 5;...
			  3, 13, 1, 15, 9, 13, 2, 6, 2, 10, 7, 6, 5, 5, 5, 5;...
			  7, 10, 9, 3, 3, 4, 11, 14, 10, 10, 8, 2, 0, 4, 9, 10;...
			  5, 6, 7, 10, 11, 9, 1, 6, 7, 11, 7, 0, 8, 0, 11, 9],...
			 [15, 3, 11, 4, 3, 9, 8, 12, 3, 14, 1, 15, 5, 4, 1, 12;...
			  14, 6, 11, 10, 14, 8, 8, 6, 7, 15, 7, 4, 2, 0, 2, 5;...
			  0, 7, 10, 11, 4, 13, 13, 12, 2, 12, 13, 4, 3, 8, 8, 3;...
			  11, 1, 0, 1, 12, 4, 7, 12, 0, 9, 13, 5, 14, 12, 7, 1],...
			 [4, 9, 1, 4, 3, 5, 6, 6, 13, 14, 4, 7, 10, 10, 14, 12;...
			  6, 3, 5, 3, 4, 1, 10, 3, 8, 9, 3, 10, 7, 1, 12, 3;...
			  8, 6, 8, 10, 1, 15, 11, 12, 14, 0, 9, 0, 14, 1, 11, 6;...
			  15, 9, 10, 13, 9, 10, 8, 15, 11, 1, 10, 13, 1, 12, 0, 8],...
			 [6, 4, 6, 5, 10, 7, 5, 5, 9, 13, 6, 8, 11, 14, 1, 3;...
			  15, 4, 13, 12, 8, 10, 2, 10, 13, 7, 3, 13, 11, 8, 1, 10;...
			  4, 9, 11, 10, 6, 8, 9, 7, 14, 13, 15, 5, 8, 1, 12, 7;...
			  11, 4, 15, 0, 10, 10, 4, 13, 15, 3, 1, 7, 2, 13, 15, 2]};

	sub_S = zeros(8, 4);
	for k = 1: 8
		row = 2*key_mixed(k, 1) + key_mixed(k, 6) + 1;
		col = 8*key_mixed(k, 2) + 4*key_mixed(k, 3) + 2*key_mixed(k, 4) + key_mixed(k, 5) + 1;
		d = S_box{k}(row, col);
		for p = 4: -1: 1
			sub_S(k, p) = mod(d, 2);
			d = floor(d/2);
		end
	end
	sub_S = reshape(sub_S', 1, 32);

	%% Permutation
	P = [16, 7, 20, 21,...
		 29, 12, 28, 17,...
		 1, 15, 23, 26,...
		 5, 18, 31, 10,...
		 2, 8, 24, 14,...
		 32, 27, 3, 9,...
		 19, 13, 30, 6,...
		 22, 11, 4, 25];
	feistel_out = zeros(1, 32);
	for k = 1: 32
		feistel_out(k) = sub_S(P(k));
	end
	feistel_out = feistel_out';

end

